@model IEnumerable<TilausASPNET.Models.Asiakkaat>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<table class="table">
    <thead>
        <tr class="bg-dark">
            <th>Asiakastunnus</th>
            <th>
                @Html.DisplayNameFor(model => model.Nimi)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Osoite)
            </th>
            <th>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AsiakasID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nimi)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Osoite)&nbsp;<br />

                    @Html.DisplayFor(modelItem => item.Postinumero)&nbsp;
                    @Html.DisplayFor(modelItem => item.Postitoimipaikat.Postitoimipaikka)
                </td>
                <td style="white-space:nowrap">
                    <button type="button" class="btn btn-outline-secondary"> @Html.ActionLink("Edit", "Edit", new { id = item.AsiakasID })</button>
                    <button type="button" class="btn btn-outline-secondary"> @Html.ActionLink("Delete", "Delete", new { id = item.AsiakasID })</button>
                </td>
            </tr>
        }
    </tbody>



</table>
<p>
    <button type="button" class="btn btn-outline-secondary"> @Html.ActionLink("Lisää uusi asiakastieto", "Create")</button>
</p>
<p>Tietokannassa @Model.Count() asiakasta</p>

<script>
    const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
    const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
        v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
    document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
        const table = th.closest('table');
        const tbody = table.querySelector('tbody');
        Array.from(tbody.querySelectorAll('tr'))
            .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
            .forEach(tr => tbody.appendChild(tr));
    })));
</script>