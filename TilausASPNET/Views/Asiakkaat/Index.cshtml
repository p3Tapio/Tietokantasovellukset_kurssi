@model IEnumerable<TilausASPNET.Models.Asiakkaat>

@{
    ViewBag.Title = "Index";
}

<h2 class="mb-4 ml-3">Asiakkaat</h2>

<div class="container">
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Asiakastunnus</th>
                <th>
                    @Html.DisplayNameFor(model => model.Nimi)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Osoite)
                </th>
                <th>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AsiakasID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nimi)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Osoite)&nbsp;<br />

                        @Html.DisplayFor(modelItem => item.Postinumero)&nbsp;
                        @Html.DisplayFor(modelItem => item.Postitoimipaikat.Postitoimipaikka)
                    </td>
                    <td style="white-space:nowrap">
                        <a class="btn btn-outline-secondary" title="Edit" href="~/Asiakkaat/Edit/@item.AsiakasID"><img src="~/Icons/pencil-square.svg" height="20" width="20" /></a>
                        <a class="btn btn-outline-secondary ml-lg-1" title="Delete" href="~/Asiakkaat/Delete/@item.AsiakasID"><img src="~/Icons/x-square.svg" height="20" width="20" /></a>
                    </td>
                </tr>
            }
        </tbody>
     

    </table>
    <p>
        <a class="btn btn-outline-secondary" href="~/Asiakkaat/Create" style="color:black"><img src="~/Icons/plus-square.svg" height="20" width="20" />&nbsp;&nbsp;Tallenna uusi asiakastieto</a>
    </p>
    <p>Tietokannassa @Model.Count() asiakasta</p>
</div>


<script>
    const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
    const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
        v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
    document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
        const table = th.closest('table');
        const tbody = table.querySelector('tbody');
        Array.from(tbody.querySelectorAll('tr'))
            .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
            .forEach(tr => tbody.appendChild(tr));
    })));
</script>
