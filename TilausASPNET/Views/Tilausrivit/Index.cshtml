@model IEnumerable<TilausASPNET.Models.Tilausrivit>

@{
    ViewBag.Title = "Index";
}

<h2>Tilausrivit</h2>

<p>
    <button class="btn btn-outline-secondary">@Html.ActionLink("Luo uusi tilausrivi", "Create")</button>
</p>
<p>Tietokannssa @Model.Count() tilausriviä</p>
<table class="table">
    <thead>
        <tr class="bg-dark">
            <th>Tilausrivin tunnus </th>
            <th>
                Asiakas
            </th>
            <th>Tuote</th>
            <th>
                @Html.DisplayNameFor(model => model.Maara)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ahinta)
            </th>
            <th>Summa</th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            decimal? summa = item.Maara * item.Ahinta;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TilausriviID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tilaukset.Asiakkaat.Nimi)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tuotteet.Nimi)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Maara)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ahinta)
                </td>
                <td>@summa</td>



                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.TilausriviID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.TilausriviID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.TilausriviID })
                </td>
            </tr>
        }
    </tbody>

</table>
<script>
    const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
    const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
        v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
    document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
        const table = th.closest('table');
        const tbody = table.querySelector('tbody');
        Array.from(tbody.querySelectorAll('tr'))
            .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
            .forEach(tr => tbody.appendChild(tr));
    })));
</script>
