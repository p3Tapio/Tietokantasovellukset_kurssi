
@model IEnumerable<TilausASPNET.Models.Tilaukset>

@{
    ViewBag.Title = "Index";
}
@section scripts {
    <script type="text/javascript">

        $("#HaettavaAsiakas").on("change", function () {
            let selValue = $("#HaettavaAsiakas").val();
            document.getElementById("AsiakasHaku").value = selValue;
        });

        $(function () {
            $(".getOrderId").click(function () {
                let orderId = $(this).data("orderid");
                let url = "/tilaukset/_ModalEdit/?id=" + orderId;

                $("#orderEdit").append("<p>Avataan tilauksen " + orderId + " muokkausikkuna...</p>");

                let $detailDivEdit = $("#orderEdit");
                $.get(url, function (data) {
                    $detailDivEdit.replaceWith(data);
                    $("#ModalOrderEdit").modal("show");
                });
            });
        });
    </script>
}
<h2 class="mb-4 ml-3">Tilaukset</h2>

<div class="container">
    <div id="orderEdit"></div>
    @using (Html.BeginForm("Index", "Tilaukset", FormMethod.Get))
    {
        <div style="white-space:nowrap" class="row ml-2">
            <p class="p-1 ml-2 mt-1 mr-2">@Html.Label("Hae asiakasyritykellä:")</p>
            <p>@Html.Hidden("AsiakasHaku", ViewBag.currentFilter1 as string, new { @id = "AsiakasHaku", @class = "form-control" })</p>
            <p class="p-1">@Html.DropDownList("Asiakas", null, htmlAttributes: new { @id = "HaettavaAsiakas", @class = "form-control" })</p>
            <p class="p-1 ml-2"><input type="submit" value="Search" class="form-control btn btn-outline-primary" /></p>
        </div>
    }

    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th> TilausID</th>
                <th> Asiakasyritys </th>
                <th> Osoite</th>

                <th> @Html.DisplayNameFor(model => model.Tilauspvm)</th>
                <th> @Html.DisplayNameFor(model => model.Toimituspvm)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TilausID)</td>
                    <td> @Html.DisplayFor(modelItem => item.Asiakkaat.Nimi)</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Toimitusosoite)<br />
                        @Html.DisplayFor(modelItem => item.Postinumero)&nbsp;
                        @Html.DisplayFor(modelItem => item.Postitoimipaikat.Postitoimipaikka)
                    </td>
                    <td> @item.Tilauspvm.ToString().TrimEnd('.', ':', '0')</td>
                    <td> @item.Toimituspvm.ToString().TrimEnd('.', ':', '0')</td>
                    <td>
                        <div class="justify-content-end">
                            <a class="btn btn-outline-secondary m-md-1" title="Details" href="~/tilaukset/Details//@item.TilausID"><img src="~/Icons/info-square.svg" height="22" /></a>
                            <button class="btn btn-outline-secondary m-md-1 getOrderId" title="Edit" data-orderid="@item.TilausID"><img src="~/Icons/pencil-square.svg" height="20" /></button>
                            <a class="btn btn-outline-secondary m-md-1" title="Delete" href="~/Tilaukset/Delete/@item.TilausID"><img src="~/Icons/x-square.svg" height="20" /></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>




    </table>
    <p>
        <a class="btn btn-outline-secondary" href="~/Tilaukset/Create" style="color:black"><img src="~/Icons/plus-square.svg" height="20" width="20" />&nbsp;&nbsp;Lisää tilaus</a>
    </p>
    <p>
        Tílauksia tietokannassa: @Model.Count() kpl
    </p>
</div>

<script>
    const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
    const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
        v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
    document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
        const table = th.closest('table');
        const tbody = table.querySelector('tbody');
        Array.from(tbody.querySelectorAll('tr'))
            .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
            .forEach(tr => tbody.appendChild(tr));
    })));
</script>
